## Ejercicio 7 TAREA

-- 1.
-- 2.
-- 3.
-- 4. MOSTAR LA CANTIDAD DE AMISTADES PENDIENTES Y RECHAZADAS
	
Select *
from TBL_AMIGOS;

Select *
from TBL_ESTATUS_SOLICITUDES;

-- FUNCION DE AGREGACION

SELECT A.CODIGO_ESTATUS, b.nombre_estatus, COUNT(1) as CANTIDAD_SOLICITUDES
FROM TBL_AMIGOS A
INNER JOIN TBL_ESTATUS_SOLICITUDES B
ON (A.CODIGO_ESTATUS = B.CODIGO_ESTATUS)
WHERE A CODIGO_ESTATUS IN (2,3)
GROUP BY CODIGO_ESTATUS, b.nombre_estatus;

-- 5. MOSTAR EL USUARIO CON MAYOR CANTIDAD DE AMIGOS CONFIRMADOS

-- FILTRAR
FROM *
FROM TBL_AMIGOS
WHERE CODIGO_ESTATUS = 1;

-- SE CREA UNA SUBCONSULTA PARA VER EL NUMERO DE AMISTADES DEL USUARIO

SELECT A.CODIGO_USUARIO, B.NOMBRE_USUARIO, A.CANTIDAD_AMIGOS
FROM (
    SELECT CODIGO_USUARIO, COUNT(1) CANTIDAD_AMIGOS
    FROM TBL_AMIGOS
    WHERE CODIGO_ESTATUS = 1
    GROUP BY CODIGO_USUARIO
    ORDER BY CANTIDAD_AMIGOS DESC
) A,
INNER JOIN TBL_USUARIOS B
ON A.CODIGO_USUARIO = B.CODIGO_USUARIO
WHERE ROWNUM = 1;

-- CONSULTA A TODOS LOS USUARIOS LA CANTIDAD DE AMIGOS 

SELECT CODIGO_USUARIO, COUNT(1) CANTIDAD_AMIGOS
FROM TBL_AMIGOS
WHERE CODIGO_ESTATUS = 1
GROUP BY CODIGO_USUARIO
ORDER BY CANTIDAD_AMIGOS DESC

INSERT INTO TBL_AMIGOS VALUES (7, 15, 1, 1);
COMMIT;

-- CONSULTAR A LOS USUARIOS CON MAYOR CANTIDAD DE AMIGOS

SELECT *
FROM (

SELECT CODIGO_USUARIO, COUNT(1) CANTIDAD_AMIGOS
FROM TBL_AMIGOS
WHERE CODIGO_ESTATUS = 1
GROUP BY CODIGO_USUARIO
ORDER BY CANTIDAD_AMIGOS DESC
)
WHERE CANTIDAD_AMIGOS = (
    SELECT MAX(CANTIDAD_AMIGOS)
    FROM (

    SELECT CODIGO_USUARIO, COUNT(1) CANTIDAD_AMIGOS
    FROM TBL_AMIGOS
    WHERE CODIGO_ESTATUS = 1
    GROUP BY CODIGO_USUARIO
    ORDER BY CANTIDAD_AMIGOS DESC
    )
)

-- DEFINIR SUBCONSULTAS
WITH AMIGOS_X_USUARIO AS (
    SELECT CODIGO_USUARIO, COUNT(1) CANTIDAD_AMIGOS
    FROM TBL_AMIGOS
    WHERE CODIGO_ESTATUS = 1
    GROUP BY CODIGO_USUARIO
    ORDER BY CANTIDAD_AMIGOS DESC
)

-- ENTONCES CON LA DEFINICION ANTERIOR LA SENTENCIA QUEDA:

WITH AMIGOS_X_USUARIO AS (
    SELECT CODIGO_USUARIO, COUNT(1) CANTIDAD_AMIGOS
    FROM TBL_AMIGOS
    WHERE CODIGO_ESTATUS = 1
    GROUP BY CODIGO_USUARIO
    ORDER BY CANTIDAD_AMIGOS DESC
)

SELECT *
FROM AMIGOS_X_USUARIO
WHERE CANTIDAD_AMIGOS = (
    SELECT MAX(CANTIDAD_AMIGOS)
    FROM AMIGOS_X_USUARIO
)

-- 6.MOSTRAR AL USUARIO CON MAS SOLICITUDES RECHAZADAS

WITH AMIGOS_X_USUARIO AS (
    SELECT CODIGO_USUARIO, COUNT(1) CANTIDAD_SOLICITUDES_RECHAZADAS
    FROM TBL_AMIGOS
    WHERE CODIGO_ESTATUS = 2
    GROUP BY CODIGO_USUARIO
)

SELECT *
FROM AMIGOS_X_USUARIO
WHERE CANTIDAD_SOLICITUDES_RECHAZADAS = (
    SELECT MAX(CANTIDAD_SOLICITUDES_RECHAZADAS)
    FROM AMIGOS_X_USUARIO
)

-- 7. MOSTAR LA CANTIDAD DE USUARIOS REGISTRADOS MENSUALMENTE

SELECT MES, COUNT(1)
FROM TBL_USUARIOS;
GROUP BY MES;

-- SELECT TO_CHAR(SYSDATE, "MM/DD/YYYY") FROM DUAL; MODELO DE SELECCION DE FECHA

SELECT TO_CHAR(FECHA_REGISTRO, "MONTH"), A.*
FROM TBL_USUARIOS A;

SELECT TO_CHAR(FECHA_REGISTRO, "YYYY-MONTH") MES, COUNT(1) CANTIDAD_USUARIOS
FROM TBL_USUARIOS
GROUP BY CCHAR(FECHA_REGISTRO, 'YYYY-MONTH');

